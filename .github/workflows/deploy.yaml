name: Deploying doctor service

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Debug Secrets
      #   run: echo ${{ secrets.EC2_HOST }} ${{ secrets.EC2_USERNAME }}
      # - name: Test SSH connection
      #   run: |
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
      #     chmod 600 id_rsa
      #     ssh -i id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo Connected successfully"

      - name: Create .env file dynamically
        env:
          REDSHIFT_HOST: ${{ secrets.REDSHIFT_HOST }}
          REDSHIFT_USER: ${{ secrets.REDSHIFT_USER }}
          REDSHIFT_PASSWORD: ${{ secrets.REDSHIFT_PASSWORD }}
          REDSHIFT_DB: ${{ secrets.REDSHIFT_DB }}
        run: |
          echo "DB_HOST=${DB_HOST}" >> .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "REDSHIFT_USER=${REDSHIFT_USER}" >> .env
          echo "REDSHIFT_PASSWORD=${REDSHIFT_PASSWORD}" >> .env
          echo "REDSHIFT_DB=${REDSHIFT_DB}" >> .env

      - name: Transfer .env file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: '.env'
          target: '/home/ec2-user/aggregator-service'
          debug: true

      # - name: Set permissions
      #   run: |
      #     ssh -i id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} \
      #     "chmod 600 /home/ec2-user/meditrack/.env && chmod -R 755 /home/ec2-user/meditrack"

      - name: Transfer repository files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: '.'
          target: '/home/ec2-user/aggregator-service'
          debug: true

      - name: Set execute permission on deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            chmod +x /home/ec2-user/aggregator-service/deploy.sh

      - name: Trigger bash script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/aggregator-service/
            ./deploy.sh
